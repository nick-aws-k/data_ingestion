AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  pServiceRoleName:
    Type: String
    Description: The name of an IAM role
  pLambdaEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Lambda policy document
  pGlueEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Glue policy document
  pAthenaEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Athena policy document
  pS3Effect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the S3 policy document
  pEventsEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Events policy document
  pCloudwatchEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Cloudwatch policy document
  pSNSEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the SNS policy document
  pRDSEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the RDS policy document
  pRedshiftEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Redshift policy document
  pSQSEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the SQS policy document
  pLakeformationEffect:
    Type: String
    Default: Deny
    AllowedValues:
      - Allow
      - Deny
    Description: The effect of the statement for the Lakeformation policy document

Resources:
  rServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref pServiceRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: !Ref pLambdaEffect
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pGlueEffect
            Principal:
              Service: 'glue.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pAthenaEffect
            Principal:
              Service: 'athena.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pS3Effect
            Principal:
              Service: 's3.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pEventsEffect
            Principal:
              Service: 'events.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pCloudwatchEffect
            Principal:
              Service: 'cloudwatch.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pSNSEffect
            Principal:
              Service: 'sns.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pRDSEffect
            Principal:
              Service: 'rds.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pRedshiftEffect
            Principal:
              Service: 'redshift.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pSQSEffect
            Principal:
              Service: 'sqs.amazonaws.com'
            Action: 'sts:AssumeRole'
          - Effect: !Ref pLakeformationEffect
            Principal:
              Service: 'lakeformation.amazonaws.com'
            Action: 'sts:AssumeRole'
          # Add other trusted services here

  rServiceRolePolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: rServiceRole
    Properties:
      PolicyName: !Sub '${pServiceRoleName}-policy'
      Roles:
        - !Ref pServiceRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: !Ref pLambdaEffect
            Action: 'lambda:*'
            Resource: '*'
          - Effect: !Ref pGlueEffect
            Action: 'glue:*'
            Resource: '*'
          - Effect: !Ref pAthenaEffect
            Action: 'athena:*'
            Resource: '*'
          - Effect: !Ref pS3Effect
            Action: 's3:*'
            Resource: '*'
          - Effect: !Ref pEventsEffect
            Action: 'events:*'
            Resource: '*'
          - Effect: !Ref pCloudwatchEffect
            Action: 'cloudwatch:*'
            Resource: '*'
          - Effect: !Ref pSNSEffect
            Action: 'sns:*'
            Resource: '*'
          - Effect: !Ref pRDSEffect
            Action: 'rds:*'
            Resource: '*'
          - Effect: !Ref pRedshiftEffect
            Action: 'redshift:*'
            Resource: '*'
          - Effect: !Ref pSQSEffect
            Action: 'sqs:*'
            Resource: '*'
          - Effect: !Ref pLakeformationEffect
            Action: 'lakeformation:*'
            Resource: '*'
          # Add other permissions for the specified services here
Outputs:
  oServiceRoleName:
    Description: The name of the service role
    Value: !Ref ServiceRole
    Export:
      Name: !Sub '${AWS::StackName}::${pServiceRoleName}'
